!function(){"use strict";var t=require("assert"),e=require("vinyl"),n=require("./index");it("should convert LTR CSS to RTL",(function(r){var o=n();o.on("data",(function(e){t.equal(e.contents.toString(),".selector { float: right; /* comment */ }"),r()})),o.write(new e({path:"styles.css",contents:Buffer.from(".selector { float: left; /* comment */ }")}))})),it("should accept rtlcss configuration",(function(r){var o=n({options:{preserveComments:!0,preserveDirectives:!1,swapLeftRightInUrl:!0,swapLtrRtlInUrl:!0,swapWestEastInUrl:!0,autoRename:!1,greedy:!1,enableLogging:!1,minify:!1},rules:[],declarations:[],properties:[],map:!1});o.on("data",(function(e){t.equal(e.contents.toString(),".pull-left {content: ' ';}"),r()})),o.write(new e({path:"styles.css",contents:Buffer.from(".pull-left {content: ' ';}")}))})),it("should honour rtlcss directives",(function(r){var o=n();o.on("data",(function(e){t.equal(e.contents.toString(),".toRight {\n  text-align: left;\n}\n"),r()})),o.write(new e({path:"styles.css",contents:Buffer.from(".toRight {\n  /*rtl:remove*/\n  direction: rtl;\n  \n  /*rtl:ignore*/\n  text-align: left;\n}\n")}))}))}();